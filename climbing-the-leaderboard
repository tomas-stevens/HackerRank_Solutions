using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'climbingLeaderboard' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY ranked
     *  2. INTEGER_ARRAY player
     */

    public static List<int> climbingLeaderboard(List<int> ranked, List<int> player)
    {

        var Result = new List<int>();
        var newlist = ranked.Distinct().ToList();
        var PlayLength = player.Count;
        var rankLength = newlist.Count - 1;
        
        int iter_Rank = rankLength;
        for(int iter = 0; iter < PlayLength; iter++){
            
            for(; iter_Rank >= 0; iter_Rank--) { 

                if(player[iter] == newlist[iter_Rank]){
                    Result.Add(iter_Rank + 1);
                    break; 
                }            
                
                else if(player[iter] < newlist[iter_Rank]){  
                    Result.Add(iter_Rank + 2);
                    break; 
                }       
                  
                else if(player[iter] > newlist[iter_Rank]&&iter_Rank==0){  
                    Result.Add(1);
                    break; 
                }
                
            }

        }    



        return Result;






    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int rankedCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> ranked = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(rankedTemp => Convert.ToInt32(rankedTemp)).ToList();

        int playerCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> player = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(playerTemp => Convert.ToInt32(playerTemp)).ToList();

        List<int> result = Result.climbingLeaderboard(ranked, player);

        textWriter.WriteLine(String.Join("\n", result));

        textWriter.Flush();
        textWriter.Close();
    }
}
