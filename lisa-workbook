using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'workbook' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n = chapters
     *  2. INTEGER k = prob per page
     *  3. INTEGER_ARRAY arr = probs per chapter
     */

    public static int workbook(int n, int k, List<int> arr)
    {
        var Result =0; 
        var page_num = 1;
        for(int iter = 0; iter < arr.Count; iter++){
            
            for(int j = 1; j<=arr[iter];j++){
                
                
                if(j==page_num) Result++;
            
                if(j%k==0 && j!=arr[iter]) page_num++;
                
            
            
            }
            page_num++;
            //Console.WriteLine(Result);
        }
        return Result;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int n = Convert.ToInt32(firstMultipleInput[0]);

        int k = Convert.ToInt32(firstMultipleInput[1]);

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        int result = Result.workbook(n, k, arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
